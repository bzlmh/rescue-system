{"version":3,"sources":["webpack:///./src/views/utils/InitMile.vue?3efe","webpack:///./node_modules/bmaplib.distancetool/index.js","webpack:///./src/views/utils/InitMile.vue?11d0","webpack:///src/views/utils/InitMile.vue","webpack:///./src/views/utils/InitMile.vue?4a69","webpack:///./src/views/utils/InitMile.vue","webpack:///./node_modules/core-js/modules/es.array.map.js"],"names":["root","factory","module","exports","this","baidu","guid","context","extend","target","source","p","hasOwnProperty","lang","_counter","toString","_instances","Class","isString","Object","prototype","call","isFunction","_className","dispose","property","disposed","Event","type","returnValue","currentTarget","addEventListener","handler","key","__listeners","id","t","test","hashCode","indexOf","removeEventListener","dispatchEvent","event","options","i","apply","arguments","inherits","subClass","superClass","className","proto","selfProps","clazz","Function","constructor","dom","_g","document","getElementById","g","String","nodeName","nodeType","insertHTML","element","position","html","range","begin","insertAdjacentHTML","ownerDocument","createRange","toUpperCase","selectNodeContents","collapse","insertNode","createContextualFragment","ac","addClass","classArray","split","result","classMatch","l","length","_listeners","on","listener","replace","afterFilter","realListener","ev","lis","filter","_eventFilter","realType","toLowerCase","attachEvent","un","item","len","isRemoveAll","detachEvent","splice","preventDefault","DistanceTool","map","opts","OperationMask","_map","_html","_maskElement","_cursor","_inUse","show","_createMask","style","display","getContainer","elem","lastChild","stopAndPrevent","e","stopBubble","button","getDrawPoint","n","global","x","layerX","offsetX","y","layerY","offsetY","srcElement","getDom","clientWidth","clientHeight","offsetParent","offsetLeft","offsetTop","isNaN","pixelToPoint","BMap","Pixel","hide","_setCursor","cursor","_opts","tips","followText","unit","lineColor","lineStroke","opacity","lineStyle","secIcon","closeIcon","_followTitle","_points","_paths","_dots","_segDistance","_overlays","_enableMassClear","_units","metric","name","conv","incon","u1","u2","us","_isOpen","_startFollowText","_movingTimerId","_styles","text","stopPropagation","cancelBubble","_bind","me","_mapMoving","pt","setPosition","Label","offset","Size","setStyles","color","borderColor","open","_toolInUse","_binded","_hideCurrent","addOverlay","distClick","poi","_isPointValid","initX","pageX","clientX","initY","pageY","clientY","lstPx","pointToPixel","thisPx","dis","Math","sqrt","pow","push","_addSecPoint","_formatTitle","_getTotalDistance","setStrokeOpacity","path","Polyline","enableMassClear","setStrokeWeight","setStrokeColor","setStrokeStyle","siblingPath","setPositionAt","disText","_setSegDistance","meters","_formatDisStr","disLabel","_formatSegLabel","point","pixel","index","distance","toFixed","distMove","curX","curY","dx","dy","getSize","width","height","panBy","noAnimation","setInterval","clearInterval","lstP","poiN","j","td","getDistance","_updateInstDis","distDblclick","distKeyDown","distMouseUp","setTimeout","close","keyCode","_clearCurData","ieVersion","navigator","userAgent","documentMode","RegExp","_initData","bindFunc","func","_dispatchLastEvent","points","slice","overlays","remove","_processLastOp","pt0","pt1","totalDis","_convertUnit","num","ico","Icon","imageOffset","secPt","Marker","icon","clickable","baseZIndex","zIndexFixed","u","csr","_getCursor","label","setStyle","setContent","BMapLib_diso","BMapLib_disi","disObj","paths","dots","segDis","prePx","btnOffset","disOffset","setOffset","bico","closeBtn","setTitle","title","htmls","BMapLib_disBoxDis","join","mapBounds","getBounds","sw","getSouthWest","ne","getNorthEast","lng","lat","render","_vm","_h","$createElement","_c","_self","staticStyle","staticClass","attrs","setDistanceToolInstance","getClickInfo","addpoint","openDistanceTool","_v","staticRenderFns","data","distanceTool","polylinePath","created","mounted","unmount","methods","console","log","updatePolylinePath","getPath","addPolylinePoint","component","$","$map","arrayMethodHasSpeciesSupport","HAS_SPECIES_SUPPORT","forced","callbackfn","undefined"],"mappings":"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","file":"js/chunk-de78f12a.8979e81d.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InitMile.vue?vue&type=style&index=0&lang=css&\"","/**\n * @fileoverview 百度地图的测距工具类，对外开放。\n * 允许用户在地图上点击完成距离的测量。\n * 使用者可以自定义测距线段的相关样式，例如线宽、颜色、测距结果所用的单位制等等。\n * 主入口类是<a href=\"symbols/BMapLib.DistanceTool.html\">DistanceTool</a>，\n * 基于Baidu Map API 1.2。\n *\n * @author Baidu Map Api Group \n * @version 1.2\n */\n\n/** \n * @namespace BMap的所有library类均放在BMapLib命名空间下\n */\n\n(function (root, factory) {  \n    if (typeof exports === 'object') {  \n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {  \n        define(factory);  \n    } else {\n        root.BMapLib = root.BMapLib || {};\n        root.BMapLib.Heatmap = root.BMapLib.DistanceTool || factory();  \n    }  \n})(this, function() {\n\n    var baidu = baidu || {guid : \"$BAIDU$\"};\n    var context = {};\n    (function() {\n        // 一些页面级别唯一的属性，需要挂载在window[baidu.guid]上\n        context[baidu.guid] = {};\n\n        /**\n         * 将源对象的所有属性拷贝到目标对象中\n         * @name baidu.extend\n         * @function\n         * @grammar baidu.extend(target, source)\n         * @param {Object} target 目标对象\n         * @param {Object} source 源对象\n         * @returns {Object} 目标对象\n         */\n        baidu.extend = function (target, source) {\n            for (var p in source) {\n                if (source.hasOwnProperty(p)) {\n                    target[p] = source[p];\n                }\n            }    \n            return target;\n        };\n\n        /**\n         * @ignore\n         * @namespace\n         * @baidu.lang 对语言层面的封装，包括类型判断、模块扩展、继承基类以及对象自定义事件的支持。\n         * @property guid 对象的唯一标识\n        */\n        baidu.lang = baidu.lang || {};\n\n        /**\n         * 返回一个当前页面的唯一标识字符串。\n         * @function\n         * @grammar baidu.lang.guid()\n         * @returns {String} 当前页面的唯一标识字符串\n         */\n        baidu.lang.guid = function() {\n            return \"TANGRAM__\" + (context[baidu.guid]._counter ++).toString(36);\n        };\n\n        context[baidu.guid]._counter = context[baidu.guid]._counter || 1;\n\n        /**\n         * 所有类的实例的容器\n         * key为每个实例的guid\n         */\n        context[baidu.guid]._instances = context[baidu.guid]._instances || {};\n\n        /**\n         * Tangram继承机制提供的一个基类，用户可以通过继承baidu.lang.Class来获取它的属性及方法。\n         * @function\n         * @name baidu.lang.Class\n         * @grammar baidu.lang.Class(guid)\n         * @param {string} guid\t对象的唯一标识\n         * @meta standard\n         * @remark baidu.lang.Class和它的子类的实例均包含一个全局唯一的标识guid。\n         * guid是在构造函数中生成的，因此，继承自baidu.lang.Class的类应该直接或者间接调用它的构造函数。<br>\n         * baidu.lang.Class的构造函数中产生guid的方式可以保证guid的唯一性，及每个实例都有一个全局唯一的guid。\n         */\n        baidu.lang.Class = function(guid) {\n            this.guid = guid || baidu.lang.guid();\n            context[baidu.guid]._instances[this.guid] = this;\n        };\n\n        context[baidu.guid]._instances = context[baidu.guid]._instances || {};\n\n        /**\n         * 判断目标参数是否string类型或String对象\n         * @name baidu.lang.isString\n         * @function\n         * @grammar baidu.lang.isString(source)\n         * @param {Any} source 目标参数\n         * @shortcut isString\n         * @meta standard\n         *             \n         * @returns {boolean} 类型判断结果\n         */\n        baidu.lang.isString = function (source) {\n            return '[object String]' == Object.prototype.toString.call(source);\n        };\n\n        /**\n         * 判断目标参数是否为function或Function实例\n         * @name baidu.lang.isFunction\n         * @function\n         * @grammar baidu.lang.isFunction(source)\n         * @param {Any} source 目标参数\n         * @returns {boolean} 类型判断结果\n         */\n        baidu.lang.isFunction = function (source) {\n            return '[object Function]' == Object.prototype.toString.call(source);\n        };\n\n        /**\n         * 重载了默认的toString方法，使得返回信息更加准确一些。\n         * @return {string} 对象的String表示形式\n         */\n        baidu.lang.Class.prototype.toString = function(){\n            return \"[object \" + (this._className || \"Object\" ) + \"]\";\n        };\n\n        /**\n         * 释放对象所持有的资源，主要是自定义事件。\n         * @name dispose\n         * @grammar obj.dispose()\n         */\n        baidu.lang.Class.prototype.dispose = function(){\n            delete context[baidu.guid]._instances[this.guid];\n            for(var property in this){\n                if (!baidu.lang.isFunction(this[property])) {\n                    delete this[property];\n                }\n            }\n            this.disposed = true;\n        };\n\n        /**\n         * 自定义的事件对象。\n         * @function\n         * @name baidu.lang.Event\n         * @grammar baidu.lang.Event(type[, target])\n         * @param {string} type\t 事件类型名称。为了方便区分事件和一个普通的方法，事件类型名称必须以\"on\"(小写)开头。\n         * @param {Object} [target]触发事件的对象\n         * @meta standard\n         * @remark 引入该模块，会自动为Class引入3个事件扩展方法：addEventListener、removeEventListener和dispatchEvent。\n         * @see baidu.lang.Class\n         */\n        baidu.lang.Event = function (type, target) {\n            this.type = type;\n            this.returnValue = true;\n            this.target = target || null;\n            this.currentTarget = null;\n        };\n\n        /**\n         * 注册对象的事件监听器。引入baidu.lang.Event后，Class的子类实例才会获得该方法。\n         * @grammar obj.addEventListener(type, handler[, key])\n         * @param \t{string}   type         自定义事件的名称\n         * @param \t{Function} handler      自定义事件被触发时应该调用的回调函数\n         * @param \t{string}   [key]\t\t为事件监听函数指定的名称，可在移除时使用。如果不提供，方法会默认为它生成一个全局唯一的key。\n         * @remark \t事件类型区分大小写。如果自定义事件名称不是以小写\"on\"开头，该方法会给它加上\"on\"再进行判断，即\"click\"和\"onclick\"会被认为是同一种事件。 \n         */\n        baidu.lang.Class.prototype.addEventListener = function (type, handler, key) {\n            if (!baidu.lang.isFunction(handler)) {\n                return;\n            }\n            !this.__listeners && (this.__listeners = {});\n            var t = this.__listeners, id;\n            if (typeof key == \"string\" && key) {\n                if (/[^\\w\\-]/.test(key)) {\n                    throw(\"nonstandard key:\" + key);\n                } else {\n                    handler.hashCode = key; \n                    id = key;\n                }\n            }\n            type.indexOf(\"on\") != 0 && (type = \"on\" + type);\n            typeof t[type] != \"object\" && (t[type] = {});\n            id = id || baidu.lang.guid();\n            handler.hashCode = id;\n            t[type][id] = handler;\n        };\n         \n        /**\n         * 移除对象的事件监听器。引入baidu.lang.Event后，Class的子类实例才会获得该方法。\n         * @grammar obj.removeEventListener(type, handler)\n         * @param {string}   type     事件类型\n         * @param {Function|string} handler  要移除的事件监听函数或者监听函数的key\n         * @remark \t如果第二个参数handler没有被绑定到对应的自定义事件中，什么也不做。\n         */\n        baidu.lang.Class.prototype.removeEventListener = function (type, handler) {\n            if (baidu.lang.isFunction(handler)) {\n                handler = handler.hashCode;\n            } else if (!baidu.lang.isString(handler)) {\n                return;\n            }\n            !this.__listeners && (this.__listeners = {});\n            type.indexOf(\"on\") != 0 && (type = \"on\" + type);\n            var t = this.__listeners;\n            if (!t[type]) {\n                return;\n            }\n            t[type][handler] && delete t[type][handler];\n        };\n\n        /**\n         * 派发自定义事件，使得绑定到自定义事件上面的函数都会被执行。引入baidu.lang.Event后，Class的子类实例才会获得该方法。\n         * @grammar obj.dispatchEvent(event, options)\n         * @param {baidu.lang.Event|String} event \tEvent对象，或事件名称(1.1.1起支持)\n         * @param {Object} options 扩展参数,所含属性键值会扩展到Event对象上(1.2起支持)\n         * @remark 处理会调用通过addEventListenr绑定的自定义事件回调函数之外，还会调用直接绑定到对象上面的自定义事件。\n         * 例如：<br>\n         * myobj.onMyEvent = function(){}<br>\n         * myobj.addEventListener(\"onMyEvent\", function(){});\n         */\n        baidu.lang.Class.prototype.dispatchEvent = function (event, options) {\n            if (baidu.lang.isString(event)) {\n                event = new baidu.lang.Event(event);\n            }\n            !this.__listeners && (this.__listeners = {});\n            options = options || {};\n            for (var i in options) {\n                event[i] = options[i];\n            }\n            var i, t = this.__listeners, p = event.type;\n            event.target = event.target || this;\n            event.currentTarget = this;\n            p.indexOf(\"on\") != 0 && (p = \"on\" + p);\n            baidu.lang.isFunction(this[p]) && this[p].apply(this, arguments);\n            if (typeof t[p] == \"object\") {\n                for (i in t[p]) {\n                    t[p][i].apply(this, arguments);\n                }\n            }\n            return event.returnValue;\n        };\n\n        /**\n         * 为类型构造器建立继承关系\n         * @name baidu.lang.inherits\n         * @function\n         * @grammar baidu.lang.inherits(subClass, superClass[, className])\n         * @param {Function} subClass 子类构造器\n         * @param {Function} superClass 父类构造器\n         * @param {string} className 类名标识\n         * @remark 使subClass继承superClass的prototype，\n         * 因此subClass的实例能够使用superClass的prototype中定义的所有属性和方法。<br>\n         * 这个函数实际上是建立了subClass和superClass的原型链集成，并对subClass进行了constructor修正。<br>\n         * <strong>注意：如果要继承构造函数，需要在subClass里面call一下，具体见下面的demo例子</strong>\n         * @shortcut inherits\n         * @meta standard\n         * @see baidu.lang.Class\n         */\n        baidu.lang.inherits = function (subClass, superClass, className) {\n            var key, proto, \n                selfProps = subClass.prototype, \n                clazz = new Function();        \n            clazz.prototype = superClass.prototype;\n            proto = subClass.prototype = new clazz();\n            for (key in selfProps) {\n                proto[key] = selfProps[key];\n            }\n            subClass.prototype.constructor = subClass;\n            subClass.superClass = superClass.prototype;\n\n            if (\"string\" == typeof className) {\n                proto._className = className;\n            }\n        };\n\n        /**\n         * @ignore\n         * @namespace baidu.dom 操作dom的方法。\n         */\n        baidu.dom = baidu.dom || {};\n\n        /**\n         * 从文档中获取指定的DOM元素\n         * \n         * @param {string|HTMLElement} id 元素的id或DOM元素\n         * @meta standard\n         * @return {HTMLElement} DOM元素，如果不存在，返回null，如果参数不合法，直接返回参数\n         */\n        baidu._g = baidu.dom._g = function (id) {\n            if (baidu.lang.isString(id)) {\n                return document.getElementById(id);\n            }\n            return id;\n        };\n\n        /**\n         * 从文档中获取指定的DOM元素\n         * @name baidu.dom.g\n         * @function\n         * @grammar baidu.dom.g(id)\n         * @param {string|HTMLElement} id 元素的id或DOM元素\n         * @meta standard\n         *             \n         * @returns {HTMLElement|null} 获取的元素，查找不到时返回null,如果参数不合法，直接返回参数\n         */\n        baidu.g = baidu.dom.g = function (id) {\n            if ('string' == typeof id || id instanceof String) {\n                return document.getElementById(id);\n            } else if (id && id.nodeName && (id.nodeType == 1 || id.nodeType == 9)) {\n                return id;\n            }\n            return null;\n        };\n\n        /**\n         * 在目标元素的指定位置插入HTML代码\n         * @name baidu.dom.insertHTML\n         * @function\n         * @grammar baidu.dom.insertHTML(element, position, html)\n         * @param {HTMLElement|string} element 目标元素或目标元素的id\n         * @param {string} position 插入html的位置信息，取值为beforeBegin,afterBegin,beforeEnd,afterEnd\n         * @param {string} html 要插入的html\n         * @remark\n         * \n         * 对于position参数，大小写不敏感<br>\n         * 参数的意思：beforeBegin&lt;span&gt;afterBegin   this is span! beforeEnd&lt;/span&gt; afterEnd <br />\n         * 此外，如果使用本函数插入带有script标签的HTML字符串，script标签对应的脚本将不会被执行。\n         * \n         * @shortcut insertHTML\n         * @meta standard\n         *             \n         * @returns {HTMLElement} 目标元素\n         */\n        baidu.insertHTML = baidu.dom.insertHTML = function (element, position, html) {\n            element = baidu.dom.g(element);\n            var range,begin;\n\n            if (element.insertAdjacentHTML) {\n                element.insertAdjacentHTML(position, html);\n            } else {\n                // 这里不做\"undefined\" != typeof(HTMLElement) && !window.opera判断，其它浏览器将出错？！\n                // 但是其实做了判断，其它浏览器下等于这个函数就不能执行了\n                range = element.ownerDocument.createRange();\n                // FF下range的位置设置错误可能导致创建出来的fragment在插入dom树之后html结构乱掉\n                // 改用range.insertNode来插入html, by wenyuxiang @ 2010-12-14.\n                position = position.toUpperCase();\n                if (position == 'AFTERBEGIN' || position == 'BEFOREEND') {\n                    range.selectNodeContents(element);\n                    range.collapse(position == 'AFTERBEGIN');\n                } else {\n                    begin = position == 'BEFOREBEGIN';\n                    range[begin ? 'setStartBefore' : 'setEndAfter'](element);\n                    range.collapse(begin);\n                }\n                range.insertNode(range.createContextualFragment(html));\n            }\n            return element;\n        };\n\n        /**\n         * 为目标元素添加className\n         * @name baidu.dom.addClass\n         * @function\n         * @grammar baidu.dom.addClass(element, className)\n         * @param {HTMLElement|string} element 目标元素或目标元素的id\n         * @param {string} className 要添加的className，允许同时添加多个class，中间使用空白符分隔\n         * @remark\n         * 使用者应保证提供的className合法性，不应包含不合法字符，className合法字符参考：http://www.w3.org/TR/CSS2/syndata.html。\n         * @shortcut addClass\n         * @meta standard\n         * \t            \n         * @returns {HTMLElement} 目标元素\n         */\n        baidu.ac = baidu.dom.addClass = function (element, className) {\n            element = baidu.dom.g(element);\n            var classArray = className.split(/\\s+/),\n                result = element.className,\n                classMatch = \" \" + result + \" \",\n                i = 0,\n                l = classArray.length;\n\n            for (; i < l; i++){\n                 if ( classMatch.indexOf( \" \" + classArray[i] + \" \" ) < 0 ) {\n                     result += (result ? ' ' : '') + classArray[i];\n                 }\n            }\n\n            element.className = result;\n            return element;\n        };\n\n        /**\n         * @ignore\n         * @namespace baidu.event 屏蔽浏览器差异性的事件封装。\n         * @property target \t事件的触发元素\n         * @property pageX \t\t鼠标事件的鼠标x坐标\n         * @property pageY \t\t鼠标事件的鼠标y坐标\n         * @property keyCode \t键盘事件的键值\n         */\n        baidu.event = baidu.event || {};\n\n        /**\n         * 事件监听器的存储表\n         * @private\n         * @meta standard\n         */\n        baidu.event._listeners = baidu.event._listeners || [];\n\n        /**\n         * 为目标元素添加事件监听器\n         * @name baidu.event.on\n         * @function\n         * @grammar baidu.event.on(element, type, listener)\n         * @param {HTMLElement|string|window} element 目标元素或目标元素id\n         * @param {string} type 事件类型\n         * @param {Function} listener 需要添加的监听器\n         * @remark\n         *  1. 不支持跨浏览器的鼠标滚轮事件监听器添加<br>\n         *  2. 改方法不为监听器灌入事件对象，以防止跨iframe事件挂载的事件对象获取失败            \n         * @shortcut on\n         * @meta standard\n         * @see baidu.event.un\n         *             \n         * @returns {HTMLElement|window} 目标元素\n         */\n        baidu.on = baidu.event.on = function (element, type, listener) {\n            type = type.replace(/^on/i, '');\n            element = baidu._g(element);\n            var realListener = function (ev) {\n                // 1. 这里不支持EventArgument,  原因是跨frame的事件挂载\n                // 2. element是为了修正this\n                listener.call(element, ev);\n            },\n            lis = baidu.event._listeners,\n            filter = baidu.event._eventFilter,\n            afterFilter,\n            realType = type;\n            type = type.toLowerCase();\n            // filter过滤\n            if(filter && filter[type]){\n                afterFilter = filter[type](element, type, realListener);\n                realType = afterFilter.type;\n                realListener = afterFilter.listener;\n            }\n            // 事件监听器挂载\n            if (element.addEventListener) {\n                element.addEventListener(realType, realListener, false);\n            } else if (element.attachEvent) {\n                element.attachEvent('on' + realType, realListener);\n            }\n          \n            // 将监听器存储到数组中\n            lis[lis.length] = [element, type, listener, realListener, realType];\n            return element;\n        };\n\n        /**\n         * 为目标元素移除事件监听器\n         * @name baidu.event.un\n         * @function\n         * @grammar baidu.event.un(element, type, listener)\n         * @param {HTMLElement|string|window} element 目标元素或目标元素id\n         * @param {string} type 事件类型\n         * @param {Function} listener 需要移除的监听器\n         * @shortcut un\n         * @meta standard\n         *             \n         * @returns {HTMLElement|window} 目标元素\n         */\n        baidu.un = baidu.event.un = function (element, type, listener) {\n            element = baidu._g(element);\n            type = type.replace(/^on/i, '').toLowerCase();\n            \n            var lis = baidu.event._listeners, \n                len = lis.length,\n                isRemoveAll = !listener,\n                item,\n                realType, realListener;\n            \n            //如果将listener的结构改成json\n            //可以节省掉这个循环，优化性能\n            //但是由于un的使用频率并不高，同时在listener不多的时候\n            //遍历数组的性能消耗不会对代码产生影响\n            //暂不考虑此优化\n            while (len--) {\n                item = lis[len];\n                \n                // listener存在时，移除element的所有以listener监听的type类型事件\n                // listener不存在时，移除element的所有type类型事件\n                if (item[1] === type\n                    && item[0] === element\n                    && (isRemoveAll || item[2] === listener)) {\n                    realType = item[4];\n                    realListener = item[3];\n                    if (element.removeEventListener) {\n                        element.removeEventListener(realType, realListener, false);\n                    } else if (element.detachEvent) {\n                        element.detachEvent('on' + realType, realListener);\n                    }\n                    lis.splice(len, 1);\n                }\n            }            \n            return element;\n        };\n\n        /**\n         * 阻止事件的默认行为\n         * @name baidu.event.preventDefault\n         * @function\n         * @grammar baidu.event.preventDefault(event)\n         * @param {Event} event 事件对象\n         * @meta standard\n         */\n        baidu.preventDefault = baidu.event.preventDefault = function (event) {\n           if (event.preventDefault) {\n               event.preventDefault();\n           } else {\n               event.returnValue = false;\n           }\n        };\n    })();\n\n    /** \n     * @exports DistanceTool as BMapLib.DistanceTool \n     */\n    var DistanceTool = function(map, opts){\n        if (!map) {\n            return;\n        }\n        \n\n        /**\n         * OperationMask，透明覆盖层，在地图上进行鼠标绘制操作时使用\n         */\n        var OperationMask = this.OperationMask = {\n            /**\n             * map对象\n             * @type {Map}\n             */\n            _map : null,\n\n            /**\n             * HTML字符串\n             * @type {String}\n             */\n            _html : \"<div style='background:transparent url(http://api.map.baidu.com/images/blank.gif);position:absolute;left:0;top:0;width:100%;height:100%;z-index:1000' unselectable='on'></div>\",\n\n            /**\n             * html元素\n             * @type {HTMLElement}\n             */\n            _maskElement : null,\n\n            /**\n             * 鼠标指针\n             * @type {String}\n             */\n            _cursor: 'default',\n\n            /**\n             * 操作层是否在使用中\n             * @type {Boolean}\n             */\n            _inUse: false,\n\n            /**\n             * 透明覆盖层的显示\n             *\n             * @param {Map} map map对象\n             * @return 无返回值\n             */\n            show : function(map) {\n                if (!this._map) {\n                    this._map = map;\n                }\n                this._inUse = true;\n                if (!this._maskElement) {\n                    this._createMask(map);\n                }\n                this._maskElement.style.display = 'block';\n            },\n\n            /**\n             * 创建覆盖层\n             *\n             * @param {Map} map map对象\n             * @return 无返回值\n             */\n            _createMask : function(map) {\n                this._map = map;\n                if (!this._map) {\n                    return;\n                }\n                baidu.insertHTML(this._map.getContainer(), \"beforeEnd\", this._html);\n                var elem = this._maskElement = this._map.getContainer().lastChild;\n\n                var stopAndPrevent = function(e) {\n                    stopBubble(e);\n                    return baidu.preventDefault(e);\n                }\n                baidu.on(elem, 'mouseup', function(e) {\n                    if (e.button == 2) {\n                        stopAndPrevent(e);\n                    }\n                });\n                baidu.on(elem, 'contextmenu', stopAndPrevent);\n                elem.style.display = 'none';\n            },\n\n            /**\n             * 获取当前绘制点的地理坐标\n             *\n             * @param {Event} e e对象\n             * @param {Boolean} n 是否向上查到相对于地图container元素的坐标位置\n             * @return Point对象的位置信息\n             */\n            getDrawPoint : function(e, n) {\n                e = global.event || e;\n                var x = e.layerX || e.offsetX || 0;\n                var y = e.layerY || e.offsetY || 0;\n                var t = e.target || e.srcElement;\n                if (t != OperationMask.getDom(this._map) && n == true) {\n                    while (t && t != this._map.getContainer()) {\n                        if (!(t.clientWidth == 0 && \n                            t.clientHeight == 0 && \n                            t.offsetParent && \n                            t.offsetParent.nodeName.toLowerCase() == 'td')) {\n                                x += t.offsetLeft;\n                                y += t.offsetTop;\n                        }\n                        t = t.offsetParent;\n                    }\n                }\n\n                if (t != OperationMask.getDom(this._map) && \n                    t != this._map.getContainer()) {\n                        return;\n                }\n                if (typeof x === 'undefined' || \n                    typeof y === 'undefined') {\n                        return;\n                }\n                if (isNaN(x) || isNaN(y)) {\n                    return;\n                }\n                return this._map.pixelToPoint(new BMap.Pixel(x, y));\n            },\n\n            /**\n             * 透明覆盖层的隐藏\n             *\n             * @return 无返回值\n             */\n            hide : function() {\n                if (!this._map) {\n                    return;\n                }\n                this._inUse = false;\n                if (this._maskElement) {\n                    this._maskElement.style.display = 'none';\n                }\n            },\n\n            /**\n             * 获取HTML容器\n             *\n             * @param {Map} map map对象\n             * @return HTML容器元素\n             */\n            getDom : function(map) {\n                if (!this._maskElement) {\n                    this._createMask(map);\n                }\n                return this._maskElement;\n            },\n\n            /**\n             * 设置鼠标样式\n             *\n             * @type {String} cursor 鼠标样式\n             * @return 无返回值\n             */\n            _setCursor : function(cursor) {\n                this._cursor = cursor || 'default';\n                if (this._maskElement) {\n                    this._maskElement.style.cursor = this._cursor;                \n                }\n            }\n        };\n\n        /**\n         * map对象\n         * @private\n         * @type {Map}\n         */\n        this._map = map;\n\n        opts = opts || {};\n        /**\n         * _opts是默认参数赋值。\n         * 下面通过用户输入的opts，对默认参数赋值\n         * @private\n         * @type {Json}\n         */\n        this._opts = baidu.extend(\n            baidu.extend(this._opts || {}, {\n\n                /**\n                 * 测距提示\n                 * @private\n                 * @type {String}\n                 */\n                tips : \"测距\",\n\n                /**\n                 * 测距过程中，提示框文字\n                 * @private\n                 * @type {String}\n                 */\n                followText : \"单击确定地点，双击结束\",\n\n                /**\n                 * 测距结果所用的单位制，可接受的属性为\"metric\"表示米制和\"us\"表示美国传统单位\n                 * @private\n                 * @type {String}\n                 */\n                unit : \"metric\",\n\n                /**\n                 * 折线颜色\n                 * @private\n                 * @type {String}\n                 */\n                lineColor : \"#ff6319\",\n\n                /**\n                 * 折线线宽\n                 * @private\n                 * @type {Number}\n                 */\n                lineStroke : 2,\n\n                /**\n                 * 折线透明度\n                 * @private\n                 * @type {Number}\n                 */\n                opacity : 0.8,\n\n                /**\n                 * 折线样式\n                 * @private\n                 * @type {String}\n                 */\n                lineStyle     : \"solid\",\n\n                /**\n                 * 跟随鼠标样式\n                 * @private\n                 * @type {String}\n                 */\n                cursor : \"http://api.map.baidu.com/images/ruler.cur\",\n\n                /**\n                 * 转折点的ICON样式\n                 * @private\n                 * @type {BMap.Icon}\n                 */\n                    secIcon : null,\n                    \n                /**\n                 * 转折点的ICON样式\n                 * @private\n                 * @type {BMap.Icon}\n                 */\n                    closeIcon : null\n            })\n        , opts);\n\n        /**\n         * 跟随的title覆盖物\n         * @private\n         * @type {BMap.Label}\n         */\n        this._followTitle = null;\n\n        /**\n         * 折线包含所有点的数组\n         * @private\n         * @type {Array}\n         */\n        this._points = [];\n\n        /**\n         * 折线所包含的所有path数组\n         * @private\n         * @type {Array}\n         */\n        this._paths = [];\n\n        /**\n         * 折线结点图片数组\n         * @private\n         * @type {Array}\n         */\n        this._dots = [];\n\n        /**\n         * 折线测距包含所有线段的距离\n         * @private\n         * @type {Array}\n         */\n        this._segDistance = [];\n\n        /**\n         * 覆盖物的数组\n         * @private\n         * @type {Array}\n         */\n        this._overlays = [];\n\n        /**\n         * 是否在调用map.clearOverlays清除画线需要建立的相关overlay元素\n         * @private\n         * @type {Boolean}\n         */\n        this._enableMassClear = true,\n        \n        /**\n         * 单位制，存储语言包中定义的单位名称\n         * @private\n         * @type {Json}\n         */\n        this._units = {\n            // metric 表示米制\n            metric : {\n                /**\n                 * 米制的名称\n                 * @type {String}\n                 */\n                name : \"metric\",\n\n                /**\n                 * 和米制的换算关系\n                 * @type {Number}\n                 */\n                conv : 1,\n\n                /**\n                 * 米制单位下两个单位制之间的换算关系\n                 * @type {Number}\n                 */\n                incon : 1000,\n\n                /**\n                 * 米制单位下较小单位\n                 * @type {String}\n                 */\n                u1 : \"米\",\n\n                /**\n                 * 米制单位下较大单位\n                 * @type {String}\n                 */\n                u2 : \"公里\"\n            },\n            // us 表示美国传统单位，各参数意义同上metric\n            us : {\n                name : \"us\",\n                conv : 3.2808,\n                incon : 5279.856,\n                u1 : \"英尺\",\n                u2 : \"英里\"\n            }\n        };\n\n        /**\n         * 是否已经开启了测距状态\n         * @private\n         * @type {Boolean}\n         */\n        this._isOpen = false;\n\n        /**\n         * 未点击任何一点时，鼠标移动时的跟随提示文字\n         * @private\n         * @type {String}\n         */\n        this._startFollowText = \"单击确定起点\";\n\n        /**\n         * 地图移动的计时器\n         * @private\n         * @type {Object}\n         */\n        this._movingTimerId = null;\n\n        /**\n         * 测距需要添加的CSS样式\n         * @private\n         * @type {Json}\n         */\n            this._styles = {\n                \"BMapLib_diso\" : \"height:17px;width:5px;position:absolute;background:url(http://api.map.baidu.com/images/dis_box_01.gif) no-repeat left top\"\n                ,\"BMapLib_disi\" : \"color:#7a7a7a;position:absolute;left:5px;padding:0 4px 1px 0;line-height:17px;background:url(http://api.map.baidu.com/images/dis_box_01.gif) no-repeat right top\" \n                ,\"BMapLib_disBoxDis\" : \"color:#ff6319;font-weight:bold\"\n            };\n\n        if (this._opts.lineStroke <= 0) {\n            this._opts.lineStroke = 2;\n        }\n        if (this._opts.opacity > 1) {\n            this._opts.opacity = 1;\n        } else if (this._opts.opacity < 0) {\n            this._opts.opacity = 0;\n        }\n        if (this._opts.lineStyle != \"solid\" &&\n            this._opts.lineStyle != \"dashed\") {\n                this._opts.lineStyle = \"solid\";\n        }\n        if (!this._units[this._opts.unit]) {\n            this._opts.unit = \"metric\";\n        }\n        \n        this.text = \"测距\";\n    }\n    \n    // 通过baidu.lang下的inherits方法，让DistanceTool继承baidu.lang.Class\n    baidu.lang.inherits(DistanceTool, baidu.lang.Class, \"DistanceTool\");\n\n    /**\n     * 地图区域的移动事件绑定\n     * @return 无返回值\n     */\n    DistanceTool.prototype._bind = function(){\n        // 设置鼠标样式\n        this._setCursor(this._opts.cursor);\n        var me = this;\n        var OperationMask = this.OperationMask;\n        // 在装载地图的页面元素上，绑定鼠标移动事件\n        baidu.on(this._map.getContainer(), \"mousemove\", function(e){\n            if (!me._isOpen) {\n                return;\n            }\n            if (!me._followTitle) {\n                return;\n            }\n            e = global.event || e;\n            var t = e.target || e.srcElement;\n            // 如果触发该事件的页面元素不是遮盖效果层，则返回，无操作\n            if (t != OperationMask.getDom(me._map)) {\n                me._followTitle.hide();\n                return;\n            }\n            if (!me._mapMoving) {\n                me._followTitle.show();\n            }\n            // 设置鼠标移动过程中，跟随的文字提示框的位置\n            var pt = OperationMask.getDrawPoint(e, true);\n            me._followTitle.setPosition(pt);\n        });\n        // 创建鼠标跟随的文字提示框\n        if (this._startFollowText) {\n            var t = this._followTitle = new BMap.Label(this._startFollowText, {offset : new BMap.Size(14, 16)});\n            this._followTitle.setStyles({color : \"#333\", borderColor : \"#ff0103\"});\n        }\n    };\n\n    /**\n     * 开启地图的测距状态\n     * @return {Boolean}，开启测距状态成功，返回true；否则返回false。\n     *\n     * @example <b>参考示例：</b><br />\n     * myDistanceToolObject.open();\n     */\n    DistanceTool.prototype.open = function(){\n        var OperationMask = this.OperationMask;\n        // 判断测距状态是否已经开启\n        if (this._isOpen == true){\n            return true;\n        }\n        // 已有其他地图上的鼠标操作工具开启\n        if (DistanceTool._toolInUse) {\n            return;\n        } else {\n            this._isOpen = true;\n            DistanceTool._toolInUse = true;\n        }\n\n        // 判断是否是否在移动过程中\n        if (this._mapMoving){\n            delete this._mapMoving;\n        }\n\n        var me = this;\n        // 增加鼠标在地图区域移动的事件\n        // 通过binded参数，避免多次绑定\n        if (!this._binded) {\n            this._binded = true;\n            // 绑定控件项事件\n            this._bind();\n            // 地图的移动过程中，需要隐藏相关的提示框\n            this._map.addEventListener(\"moving\", function(){\n                me._hideCurrent();\n            });\n        }\n\n        // 将文字提示框作为BMap.Label元素，提交给Map Api进行管理\n        if (this._followTitle) {\n            this._map.addOverlay(this._followTitle);\n            this._followTitle.hide();\n        }\n\n        /**\n         * 测距过程中，点击地图时，触发的操作\n         * @ignore\n         * @param {Object} e event对象\n         */\n        var distClick = function(e) {\n            var map = me._map;\n            if (!me._isOpen) {\n                    return;\n            }\n            // 通过event对象，计算得出点击位置的物理坐标，poi为一个BMap.Point对象\n            e = global.event || e;\n            var poi = OperationMask.getDrawPoint(e, true);\n            // 验证计算得出的该点的位置合理性\n            if (!me._isPointValid(poi)) {\n                return;\n            }\n            // 记录当前点的屏幕位置\n            me._bind.initX = e.pageX || e.clientX || 0;\n            me._bind.initY = e.pageY || e.clientY || 0;\n\n            // 这个if循环内的计算是，判断当前这个点，与存储内的最后一个点的距离，\n            // 如果距离过小，比如小于5，可以认为是用户的误点，可以忽略掉\n            if (me._points.length > 0){\n                var lstPx = map.pointToPixel(me._points[me._points.length - 1]);\n                var thisPx = map.pointToPixel(poi);\n                var dis = Math.sqrt(Math.pow(lstPx.x - thisPx.x, 2) + Math.pow(lstPx.y - thisPx.y, 2));\n                if (dis < 5) {\n                    return;\n                }\n            }\n\n            me._bind.x = e.layerX || e.offsetX || 0;\n            me._bind.y = e.layerY || e.offsetY || 0;\n            me._points.push(poi);\n            // 添加测距结点\n            me._addSecPoint(poi);\n\n            // 调整跟踪鼠标的标签\n            if (me._paths.length == 0) {\n                me._formatTitle(1, me._opts.followText, me._getTotalDistance());\n            }\n\n            // 修改确定线的颜色\n            if (me._paths.length > 0) {\n                me._paths[me._paths.length - 1].show();\n                me._paths[me._paths.length - 1].setStrokeOpacity(me._opts.opacity);\n            }\n\n            var path = new BMap.Polyline([poi, poi], {enableMassClear : me._enableMassClear});\n            me._map.addOverlay(path);\n            me._paths.push(path);\n            me._overlays.push(path);\n\n            // 测距模式下线样式固定\n            path.setStrokeWeight(me._opts.lineStroke);\n            path.setStrokeColor(me._opts.lineColor);\n            path.setStrokeOpacity(me._opts.opacity / 2);\n            path.setStrokeStyle(me._opts.lineStyle);           \n\n            // 如果地图正在移动则隐藏掉\n            if (me._mapMoving){\n                path.hide();\n            }\n\n            if (me._points.length > 1) {\n                var siblingPath = me._paths[me._points.length - 2];\n                siblingPath.setPositionAt(1, poi);\n            }\n\n            // 生成节点旁边的距离显示框\n            var disText = \"\";\n            if (me._points.length > 1) {\n                // 非起点的节点，显示当前的距离\n                var segDis = me._setSegDistance(me._points[me._points.length - 2], me._points[me._points.length - 1]);\n                var meters = me._getTotalDistance();\n                disText = me._formatDisStr(meters);\n            } else {\n                disText = \"起点\";\n            }                \n            var disLabel = new BMap.Label(disText, {offset : new BMap.Size(10, -5), enableMassClear : me._enableMassClear});\n            disLabel.setStyles({color : \"#333\", borderColor : \"#ff0103\"});\n            me._map.addOverlay(disLabel);\n            me._formatSegLabel(disLabel, disText);\n            me._overlays.push(disLabel);\n            poi.disLabel = disLabel;\n            disLabel.setPosition(poi);\n\n            /**\n             * 测距过程中，每次点击底图添加节点时，派发事件的接口\n             * @name DistanceTool#onaddpoint\n             * @event\n             * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：\n             * <br />{\"<b>point</b> : {BMap.Point} 最新添加上的节点BMap.Point对象,\n             * <br />\"<b>pixel</b>：{BMap.pixel} 最新添加上的节点BMap.Pixel对象,\n             * <br />\"<b>index</b>：{Number} 最新添加的节点的索引,\n             * <br />\"<b>distance</b>：{Number} 截止最新添加的节点的总距离}\n             *\n             * @example <b>参考示例：</b><br />\n             * myDistanceToolObject.addEventListener(\"addpoint\", function(e) {  alert(e.distance);  });\n             */\n\n            // 生成名为onaddpoint的baidu.lang.Event对象\n            // 并给该event对象添加上point、pixel、index和distance等属性字段\n            // 然后在此刻，将绑定在onaddpoint上事件，全部赋予event参数，然后派发出去\n            var event = new baidu.lang.Event(\"onaddpoint\");\n            event.point = poi;\n            event.pixel = me._map.pointToPixel(poi);\n            event.index = me._points.length - 1;\n            event.distance = me._getTotalDistance().toFixed(0);\n            me.dispatchEvent(event);\n        };\n\n        /**\n         * 测距过程中，鼠标在地图上移动时，触发的操作\n         * @ignore\n         * @param {Object} e event对象\n         */\n        var distMove = function(e) {\n            if (!me._isOpen){\n                return;\n            }\n            // 通过判断数组me._paths的长度，判断当前是否已经有测量节点\n            // 也就是，如果没有节点，则还没有开始测量\n            if (me._paths.length > 0) {\n                // 通过event参数，计算当前点的位置\n                e = global.event || e;\n                var curX = e.pageX || e.clientX || 0;\n                var curY = e.pageY || e.clientY || 0;\n                if (typeof me._bind.initX == \"undefined\") {\n                    me._bind.x = e.layerX || e.offsetX || 0;\n                    me._bind.y = e.layerY || e.offsetY || 0;\n                    me._bind.initX = curX;\n                    me._bind.initY = curY;\n                }\n                var x = me._bind.x + curX - me._bind.initX;\n                var y = me._bind.y + curY - me._bind.initY;\n\n                // 修改最后一条折线的终点位置，使之随着鼠标移动画线\n                var path = me._paths[me._paths.length - 1];\n                var poi = me._map.pixelToPoint(new BMap.Pixel(x, y));\n                path.setPositionAt(1, poi);\n\n                if (!me._mapMoving) {\n                    path.show();\n                }\n                var dx = 0;\n                var dy = 0;\n                // 计算当前鼠标位置，是否靠近边界、或者已经出了边界\n                // 如果在边界位置，则需要向对应的方向移动地图，来进行测量\n                // 每次移动的距离，设定为8\n                if (x < 10) {\n                    dx = 8;\n                } else if (x > me._map.getSize().width - 10){\n                    dx = -8;\n                }\n                if (y < 10) {\n                    dy = 8;\n                } else if (y > me._map.getSize().height - 10){\n                    dy = -8;\n                }\n                // 如果dx和dy都等于0，表明不需要移动地图\n                if (dx != 0 || dy != 0){\n                    // 此时需要向一个方向，平移地图\n                    if (!distMove._movingTimerId){\n                        me._mapMoving = true;\n                        me._map.panBy(dx, dy, {noAnimation : true});                        \n                        me._movingTimerId = distMove._movingTimerId = setInterval(function(){\n                            me._map.panBy(dx, dy, {noAnimation : true});\n                        }, 30);\n                        // 地图移动过程中，隐藏线段和标签\n                        path.hide();\n                        me._followTitle && me._followTitle.hide();\n                    }\n                } else {\n                    if (distMove._movingTimerId) {\n                        // 此时用户不在需要移动地图来测量，可以清除计时器\n                        clearInterval(distMove._movingTimerId);\n                        delete distMove._movingTimerId;\n                        delete me._movingTimerId;\n\n                        // 显示跟随提示框，并修改线路位置\n                        var lstP = me._paths[me._paths.length - 1];\n                        var poiN = me._map.pixelToPoint(new BMap.Pixel(x, y));\n                        if (!lstP) {\n                            return;\n                        }\n                        lstP.setPositionAt(1, poiN);\n                        lstP.show();\n                        if (me._followTitle) {\n                            me._followTitle.setPosition(poiN);\n                            me._followTitle.show();\n                        }\n                        me._bind.i = 0;\n                        me._bind.j = 0;\n                        delete me._mapMoving;\n                    }\n                }\n                // 实时更新文字提示框中的距离\n                if (me._followTitle) {\n                    var td = me._getTotalDistance();\n                    var dis = me._map.getDistance(me._points[me._points.length - 1], poi);\n                    me._updateInstDis(me._followTitle, td + dis);\n                }\n            } else {\n                // 此时用户还没有开始测量，只是鼠标随便在地图上移动\n                if (me._followTitle) {\n                    me._followTitle.show();\n                    e = global.event || e;\n                    var t = e.target || e.srcElement;\n                    if (t != OperationMask.getDom()) {\n                        me._followTitle.hide();\n                    }\n                }        \n            }\n        };\n\n        /**\n         * 测距要结束时，双击地图，触发的操作\n         * @ignore\n         * @param {Object} e event对象\n         */\n        var distDblclick = function(e) {\n            if (!me._isOpen) {\n                return;\n            }\n            // 结束时，删除绑定的事件\n            baidu.un(OperationMask.getDom(me._map), \"click\", distClick);\n            baidu.un(document, \"mousemove\", distMove);\n            baidu.un(OperationMask.getDom(me._map), \"dblclick\", distDblclick);            \n            baidu.un(document, \"keydown\", distKeyDown);\n            baidu.un(OperationMask.getDom(me._map), \"mouseup\", distMouseUp);\n\n            // 调用close()关闭测距状态\n            setTimeout(function(){\n                me.close();\n            }, 50);\n        };\n        \n        /**\n         * 测距时的键盘操作\n         * @ignore\n         * @param {Object} e event对象\n         */\n        var distKeyDown = function(e){\n            e = global.event || e;\n            if (e.keyCode == 27){ \n                // [ESC]退出本次测距\n                me._clearCurData();\n                setTimeout(function(){\n                    me.close();\n                }, 50);\n            }\n        };\n\n        /**\n         * 测距过程中，鼠标弹起时，触发的操作\n         * @ignore\n         * @param {Object} e event对象\n         */\n        var distMouseUp = function(e) {\n            e = global.event || e;\n            var ieVersion = 0;\n            if (/msie (\\d+\\.\\d)/i.test(navigator.userAgent)) {\n               ieVersion = document.documentMode || + RegExp['\\x241'];\n            }\n            if (ieVersion && \n                e.button != 1 || \n                e.button == 2){\n                    me.close();\n            }\n        };\n\n        // 初始化存储数据\n        me._initData();\n\n        // 调整title的内容\n        this._formatTitle();\n\n        // 创建透明覆盖层，并设置鼠标样式\n        OperationMask.show(this._map);\n        this._setCursor(this._opts.cursor);\n\n        // 绑定全部事件\n        baidu.on(OperationMask.getDom(this._map), \"click\", distClick);\n        baidu.on(document, \"mousemove\", distMove);\n        baidu.on(OperationMask.getDom(this._map), \"dblclick\", distDblclick);\n        baidu.on(document, \"keydown\", distKeyDown);\n        baidu.on(OperationMask.getDom(this._map), \"mouseup\", distMouseUp);\n        \n        // 将绑定的事件、和对应的绑定对象，记录在数组中\n        this.bindFunc = [\n            {elem : OperationMask.getDom(this._map), type : \"click\", func : distClick}, \n            {elem : OperationMask.getDom(this._map), type : \"dblclick\", func : distDblclick},\n            {elem : document, type : \"mousemove\", func : distMove},\n            {elem : document, type : \"keydown\", func : distKeyDown},\n            {elem : OperationMask.getDom(this._map), type : \"mouseup\", func : distMouseUp}];\n        return true;\n    };\n\n    /**\n     * 画线结束时，派发drawend事件\n     * @return 无返回值\n     */\n    DistanceTool.prototype._dispatchLastEvent = function() {\n        /**\n         * 测距时，每次双击底图结束当前测距折线时，派发事件的接口\n         * @name DistanceTool#ondrawend\n         * @event\n         * @param {Event Object} e 回调函数会返回event参数，包括以下返回值：\n         * <br />{\"<b>points</b> : {BMap.Point} 所有测量时，打下的节点BMap.Point对象,\n         * <br />\"<b>overlays</b>：{Array} 所有测量时，生成的线段BMap.Overlay对象,\n         * <br />\"<b>distance</b>：{Number} 测量解释时的最终距离}\n         *\n         * @example <b>参考示例：</b><br />\n         * myDistanceToolObject.addEventListener(\"drawend\", function(e) {  alert(e.distance);  });\n         */\n\n        // 生成名为ondrawend的baidu.lang.Event对象\n        // 并给该event对象添加上points、overlays和distance等属性字段\n        // 然后在此刻，将绑定在ondrawend上事件，全部赋予event参数，然后派发出去\n        var event = new baidu.lang.Event(\"ondrawend\");\n        event.points = \n            this._points ? \n                this._points.slice(0) : \n                [];\n        event.overlays = \n            this._paths ? \n                this._paths.slice(0, this._paths.length - 1) : \n                [];\n        event.distance = this._getTotalDistance().toFixed(0);\n        this.dispatchEvent(event);\n    };\n\n    /**\n     * 关闭测距状态\n     * @return 无返回值\n     *\n     * @example <b>参考示例：</b><br />\n     * myDistanceToolObject.close();\n     */\n    DistanceTool.prototype.close = function(){\n        var OperationMask = this.OperationMask;\n        if (this._isOpen == false){\n            return;\n        }\n        this._isOpen = false;\n        DistanceTool._toolInUse = false;\n\n        if (this._mapMoving){\n            delete this._mapMoving;\n        }\n        var me = this;\n        me._dispatchLastEvent();\n        if (me._points.length < 2){\n            // 不是有效绘制，清除所有内容\n            me._clearCurData();\n        } else {\n            me._paths[me._paths.length - 1].remove();\n            me._paths[me._paths.length - 1] = null;\n            me._paths.length = me._paths.length - 1;\n            // 移除最近一次标记\n            var pt = me._points[me._points.length - 1];\n            if (pt.disLabel){\n                pt.disLabel.remove();\n            }\n            me._processLastOp();\n        }\n        OperationMask.hide();\n\n        // 删除绑定的事件\n        for (var i = 0, l = this.bindFunc.length; i < l; i ++){\n            baidu.un(this.bindFunc[i].elem, this.bindFunc[i].type, this.bindFunc[i].func);\n        }\n\n        // 停止地图移动\n        if (me._movingTimerId){\n            clearInterval(me._movingTimerId);\n            me._movingTimerId = null;\n        }\n\n        if (this._followTitle){\n            this._followTitle.hide();\n        }\n    };\n\n    /**\n     * 清除本次测距的暂存数据\n     * @return 无返回值\n     */\n    DistanceTool.prototype._clearCurData = function(){\n        var OperationMask = this.OperationMask;\n        for (var i = 0, l = this._points.length; i < l; i ++){\n            if (this._points[i].disLabel){\n                this._points[i].disLabel.remove();\n            }\n        }\n        for (var i = 0, l = this._paths.length; i < l; i ++){\n            this._paths[i].remove();\n        }\n        for (var i = 0, l = this._dots.length; i < l; i ++){\n            this._dots[i].remove();\n        }\n        this._initData();\n    };\n\n    /**\n     * 初始化存储数组\n     * @return 无返回值\n     */\n    DistanceTool.prototype._initData = function(){\n        // 初始化point数组\n        this._points.length = 0;\n        // 初始化path数组\n        this._paths.length = 0;\n        // 初始化分段距离数组\n        this._segDistance.length = 0;\n        // 初始化结点图像数组\n        this._dots.length = 0;\n    };\n\n    /**\n     * 计算两点之间距离并存放在分段距离数组中\n     * @param {Point}\n     * @param {Point}\n     * @return {Number} 两个地理点之间的距离\n     */\n    DistanceTool.prototype._setSegDistance = function(pt0, pt1){\n        if (!pt0 || !pt1){\n            return;\n        }\n        var dis = this._map.getDistance(pt0, pt1);\n        this._segDistance.push(dis);\n        return dis;\n    };\n\n    /**\n     * 获得总距离\n     * @return {Number} 总距离\n     */\n    DistanceTool.prototype._getTotalDistance = function(){\n        var totalDis = 0;\n        for (var i = 0, l = this._segDistance.length; i < l; i ++){\n            totalDis += this._segDistance[i];\n        }\n        return totalDis;\n    };\n\n    /**\n     * 将米制单位的数值换算成为目标单位下的数值\n     * @type {Number} 需要转换的数值\n     * @type {String} 字符串描述的目标单位，\n     * \"metric\" 表示米制单位，\n     * \"us\" 表示美国传统单位制\n     * @return {Number} 转换后的数值\n     */\n    DistanceTool.prototype._convertUnit = function(num, unit){\n        unit = unit || \"metric\";\n        if (this._units[unit]){\n            return num * this._units[unit].conv;\n        }\n        return num;\n    };\n\n    /**\n     * 添加测距结点\n     * @param {BMap.Point} 节点\n     * @return 无返回值\n     */\n    DistanceTool.prototype._addSecPoint = function(pt){\n        var ico = \n            this._opts.secIcon ? \n                this._opts.secIcon :\n                new BMap.Icon(\"http://api.map.baidu.com/images/mapctrls.png\", new BMap.Size(11, 11), {imageOffset: new BMap.Size(-26, -313)});\n        var secPt = new BMap.Marker(pt, {\n            icon : ico, \n            clickable : false, \n            baseZIndex : 3500000, \n            zIndexFixed : true,\n            enableMassClear : this._enableMassClear\n        });\n        this._map.addOverlay(secPt);\n        this._dots.push(secPt);\n    };\n\n    /**\n     * 格式化距离字符串\n     * @param {Number} 距离\n     * @return {String} 格式化的字符串\n     */\n    DistanceTool.prototype._formatDisStr = function(distance){\n        var u = this._opts.unit;\n        var unit = this._units[u].u1;\n        var dis = this._convertUnit(distance, u);\n\n        if (dis > this._units[u].incon){\n            dis = dis / this._units[u].incon;\n            unit = this._units[u].u2;\n            dis = dis.toFixed(1);\n        } else {\n            dis = dis.toFixed(0); \n        }\n        return dis + unit;\n    };\n\n    /**\n     * 设置鼠标样式\n     * @param {String} cursor 鼠标样式\n     * @return 没有返回值\n     */\n    DistanceTool.prototype._setCursor = function(cursor){\n        var OperationMask = this.OperationMask;\n        // 由于webkit内核浏览器下，cursor设置后默认不会居中，所以需要对偏移值进行设置\n        var csr = \n            /webkit/.test(navigator.userAgent.toLowerCase()) ?\n                \"url(\" + this._opts.cursor + \") 3 6, crosshair\" :\n                \"url(\" + this._opts.cursor + \"), crosshair\"\n        OperationMask._setCursor(csr);\n    };\n\n    /**\n     * 获取鼠标样式\n     * @return {String} 跟随的鼠标样式\n     */\n    DistanceTool.prototype._getCursor = function(){\n        return this._opts.cursor;\n    };\n\n    /**\n     * 调整分段距离样式\n     * @param {BMap.Label} label 提示框的Label\n     * @param {String} 需要填入的文字\n     * @return 没有返回值\n     */\n    DistanceTool.prototype._formatSegLabel = function(label, text){\n        label.setStyle({\"border\" : \"none\", \"padding\" : \"0\"});\n        label.setContent(\"<span style='\" + this._styles.BMapLib_diso + \"'><span style='\" + this._styles.BMapLib_disi + \"'>\" + text + \"</span></span>\");\n    };\n\n    /**\n     * 处理最后一次操作，当用户双击或测距被强行退出时调用\n     * @return 没有返回值\n     */\n    DistanceTool.prototype._processLastOp = function() {\n        var me = this;\n        // 删除上次移动临时数据\n        delete me._bind.x;\n        delete me._bind.y;\n        delete me._bind.initX;\n        delete me._bind.initY;\n        // 验证路径\n        if (me._paths.length > me._points.length - 1){\n            var l = me._paths.length - 1;\n            me._paths[l].remove();\n            me._paths[l] = null;\n            me._paths.length = l;\n        }\n        // 保存本次测距对象\n        var disObj = {};\n        disObj.points = me._points.slice(0);\n        disObj.paths  = me._paths.slice(0);\n        disObj.dots   = me._dots.slice(0);\n        disObj.segDis = me._segDistance.slice(0);\n        // 判断总距离和按钮位置\n        var lstPx = me._map.pointToPixel(disObj.points[disObj.points.length - 1]);\n        var prePx = me._map.pointToPixel(disObj.points[disObj.points.length - 2]);\n        var btnOffset = [0, 0];\n        var disOffset = [0, 0];\n        if (lstPx.y - prePx.y >= 0){\n            // 距离位于下端\n            disOffset = [-5, 11];\n        } else {\n            // 距离位于上端\n            disOffset = [-5, -35];\n        }\n        if (lstPx.x - prePx.x >= 0){\n            // 按钮位于右侧\n            btnOffset = [14, 0];\n        } else {\n            // 按钮位于左侧\n            btnOffset = [-14, 0];\n        }\n        // 显示总距离\n        var pt = disObj.points[disObj.points.length - 1];\n        pt.disLabel = new BMap.Label(\"\", {offset: new BMap.Size(-15, -40), enableMassClear: me._enableMassClear});\n        pt.disLabel.setStyles({color: \"#333\", borderColor: \"#ff0103\"});\n        me._map.addOverlay(pt.disLabel);\n        pt.disLabel.setOffset(new BMap.Size(disOffset[0], disOffset[1]));\n        pt.disLabel.setPosition(pt);\n        me._formatTitle(2, \"\", \"\", pt.disLabel);\n        // 添加关闭按钮\n        var bico = \n            this._opts.closeIcon ? \n                this._opts.closeIcon :\n                new BMap.Icon(\"http://api.map.baidu.com/images/mapctrls.gif\", new BMap.Size(12, 12), {imageOffset: new BMap.Size(0, -14)});\n        disObj.closeBtn = new BMap.Marker(disObj.points[disObj.points.length - 1], \n            {icon : bico, \n            offset : new BMap.Size(btnOffset[0], btnOffset[1]), \n            baseZIndex : 3600000,\n            enableMassClear : me._enableMassClear}\n        );\n        me._map.addOverlay(disObj.closeBtn);\n        disObj.closeBtn.setTitle(\"清除本次测距\");\n        // 点击关闭按钮，绑定关闭按钮事件\n        disObj.closeBtn.addEventListener(\"click\", function(e){\n            // 关闭本次测距，清除相关存储和变量\n            for (var i = 0, l = disObj.points.length; i < l; i ++){\n                disObj.points[i].disLabel.remove();\n                disObj.points[i].disLabel = null;\n            }\n            for (var i = 0, l = disObj.paths.length; i < l; i ++){\n                disObj.paths[i].remove();\n                disObj.paths[i] = null;\n            }\n            for (var i = 0, l = disObj.dots.length; i < l; i ++){\n                disObj.dots[i].remove();\n                disObj.dots[i] = null;\n            }\n            disObj.closeBtn.remove();\n            disObj.closeBtn = null;\n            stopBubble(e);\n            \n            /**\n             * @ignore\n             * 测距结束后，点击线段上最后一个节点旁的关闭按钮时，派发事件的接口\n             * @name DistanceTool#onremovepolyline\n             * @event\n             * @param {Event Object} e 回调函数会返回event参数\n             *\n             * @example <b>参考示例：</b><br />\n             * myDistanceToolObject.addEventListener(\"removepolyline\", function(e) {  alert(e.type);  });\n             */\n\n            // 生成名为onremovepolyline的baidu.lang.Event对象\n            // 然后在此刻，将绑定在onremovepolyline上事件，全部赋予event参数，然后派发出去\n            var event = new baidu.lang.Event(\"onremovepolyline\");\n            me.dispatchEvent(event);\n        });        \n        me._initData();\n    };\n\n    /**\n     * 生成测距过程中的文字提示框\n     * @param {String} type\n     * @param {String} text \n     * @param {String} distance\n     * @param {Label} label\n     * @return 无返回值\n     */\n    DistanceTool.prototype._formatTitle = function(type, text, distance, label){\n        var title = label || this._followTitle;\n        if (!title){\n            return;\n        }\n        title.setStyle({\"lineHeight\" : \"16px\", \"zIndex\" : \"85\", \"padding\" : \"3px 5px\"});\n        var t = this._startFollowText || \"\";\n        var htmls = [];\n        if (type == 1){\n            // 测距过程中的提示\n            title.setOffset(0, 25);\n            var u = this._opts.unit;\n            var unit = this._units[u].u1;\n            var dis = this._convertUnit(distance, u);\n            if (dis > this._units[u].incon){\n                dis = dis / this._units[u].incon;\n                unit = this._units[u].u2;\n                dis = dis.toFixed(1);\n            } else {\n                dis = dis.toFixed(0);\n            }\n            htmls.push(\"<span>总长：<span style='\" + this._styles.BMapLib_disBoxDis+\"'>\" + dis + \"</span>\" + unit + \"</span><br />\");\n            htmls.push(\"<span style='color:#7a7a7a'>\" + text + \"</span>\");\n        } else if (type == 2) {\n            // 结束时的总距离展示\n            var u = this._opts.unit;\n            var unit = this._units[u].u1;\n            var dis = this._convertUnit(this._getTotalDistance(), u);\n            if (dis > this._units[u].incon){\n                dis = dis / this._units[u].incon;\n                unit = this._units[u].u2;\n                dis = dis.toFixed(1);\n            } else{\n                dis = dis.toFixed(0);\n            }\n            htmls.push(\"总长：<span style='\" + this._styles.BMapLib_disBoxDis + \"'>\" + dis + \"</span>\" + unit);\n        } else {\n            title.setOffset(0, 25);\n            htmls.push(t);\n        }\n        title.setContent(htmls.join(\"\"));\n    };\n\n    /**\n     * 更新label的距离\n     * @param HTMLElement label的DOM元素\n     * @param Number 距离\n     */\n    DistanceTool.prototype._updateInstDis = function(label, dis){\n        // 换算距离\n        var u = this._opts.unit;\n        var unit = this._units[u].u1;\n        if (dis > this._units[u].incon){\n            dis = dis / this._units[u].incon;\n            unit = this._units[u].u2;\n            dis = dis.toFixed(1);\n        } else {\n            dis = dis.toFixed(0);\n        }\n        // 修改Label的内容\n        if (label) {\n            var htmls = [];\n            htmls.push(\"<span>总长：<span style='\" + this._styles.BMapLib_disBoxDis + \"'>\" + dis + \"</span>\" + unit + \"</span><br />\");\n            htmls.push(\"<span style='color:#7a7a7a'>\" + this._opts.followText + \"</span>\");\n            label.setContent(htmls.join(\"\"));\n        }\n    };\n\n    /**\n     * 隐藏相关的线段和提示框文字\n     * @return 无返回值\n     */\n    DistanceTool.prototype._hideCurrent = function(){\n        if (!this._isOpen){\n            return;\n        }\n        if (this._paths.length > 0){\n            var p = this._paths[this._paths.length - 1];\n            p.hide();\n        }\n        this._followTitle && this._followTitle.hide();\n    };\n\n    /**\n     * 验证传入点的位置合理性\n     * @param {BMap.Point} pt 需要被验证的point点\n     * @return 无返回值\n     */\n    DistanceTool.prototype._isPointValid = function(pt){\n        if (!pt){\n            return false;\n        }\n        var mapBounds = this._map.getBounds();\n        var sw = mapBounds.getSouthWest(),\n              ne = mapBounds.getNorthEast();\n        if (pt.lng < sw.lng ||\n            pt.lng > ne.lng ||\n            pt.lat < sw.lat ||\n            pt.lat > ne.lat) {\n                return false;\n        }\n        return true;\n    };\n\n    /**\n     * 停止事件冒泡传播，\n     * 闭包，对外不暴露\n     *\n     * @type {Event} e e对象\n     */\n    function stopBubble(e){\n        var e = global.event || e;\n        e.stopPropagation ? e.stopPropagation() : e.cancelBubble = true;\n    };\n\n    return DistanceTool;\n});\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticStyle:{\"margin-top\":\"-30px\",\"margin-left\":\"-25px\"}},[_c('a-card',{staticStyle:{\"height\":\"100%\"}},[_c('baidu-map',{staticClass:\"map\",attrs:{\"center\":{lng: 111.78659844978476, lat: 32.628692924430865},\"zoom\":14,\"scroll-wheel-zoom\":true},on:{\"ready\":_vm.setDistanceToolInstance,\"click\":_vm.getClickInfo}},[_c('bm-navigation',{attrs:{\"anchor\":\"BMAP_ANCHOR_TOP_RIGHT\"}}),_c('bm-control',{on:{\"addpoint\":_vm.addpoint}},[_c('button',{on:{\"click\":_vm.openDistanceTool}},[_vm._v(\"开启测距\")])])],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div style=\"margin-top:-30px;margin-left: -25px;\">\r\n<!--     <BreadList :list=\"['首页']\" />-->\r\n    <a-card style=\"height: 100%;\">\r\n      <baidu-map class=\"map\"   :center=\"{lng: 111.78659844978476, lat: 32.628692924430865}\" :zoom=\"14\" :scroll-wheel-zoom=\"true\" @ready=\"setDistanceToolInstance\" @click=\"getClickInfo\">\r\n        <bm-navigation anchor=\"BMAP_ANCHOR_TOP_RIGHT\"></bm-navigation>\r\n\r\n        <bm-control @addpoint=\"addpoint\">\r\n          <button @click=\"openDistanceTool\" >开启测距</button>\r\n        </bm-control>\r\n      </baidu-map>\r\n    </a-card>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport DistanceTool from 'bmaplib.distancetool'\r\nexport default {\r\n\r\n  data() {\r\n    return {\r\n      distanceTool:\"\",\r\n      polylinePath: [\r\n        {lng: 116.404, lat: 39.915},\r\n        {lng: 116.405, lat: 39.920},\r\n        {lng: 116.423493, lat: 39.907445}\r\n      ],\r\n      lng:\"\",\r\n      lat:\"\"\r\n    }\r\n  },\r\n  created() {\r\n  },\r\n  mounted() {\r\n  },\r\n  unmount () {\r\n    this.distanceTool && this.distanceTool.close()\r\n  },\r\n  // watch: {\r\n  //   DistanceTool.addEventListener('addpoint', function(e) {\r\n  //     // console.log(\"drawend\");\r\n  //     console.log(e.points);\r\n  //     console.log(e.overlays);\r\n  //     // console.log(e.distance);\r\n  //   });\r\n    // function(e){\r\n    //   console.log(DistanceTool.)\r\n    // }\r\n  // },\r\n  methods: {\r\n    addpoint(e){\r\n      console.log(e.points)\r\n    },\r\n    setDistanceToolInstance ({map}) {\r\n      this.distanceTool = new DistanceTool(map, {lineStroke : 2})\r\n    },\r\n    openDistanceTool (e) {\r\n      console.log(e)\r\n      const {distanceTool} = this\r\n      distanceTool && distanceTool.open()\r\n    },\r\n    updatePolylinePath (e) {\r\n      this.polylinePath = e.target.getPath()\r\n    },\r\n    addPolylinePoint () {\r\n      this.polylinePath.push({lng: 116.404, lat: 39.915})\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n.map {\r\n  width: 100%;\r\n\r\n  height: 86vh;\r\n}\r\n</style>\r\n\r\n\r\n\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InitMile.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./InitMile.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./InitMile.vue?vue&type=template&id=32911585&\"\nimport script from \"./InitMile.vue?vue&type=script&lang=js&\"\nexport * from \"./InitMile.vue?vue&type=script&lang=js&\"\nimport style0 from \"./InitMile.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","'use strict';\nvar $ = require('../internals/export');\nvar $map = require('../internals/array-iteration').map;\nvar arrayMethodHasSpeciesSupport = require('../internals/array-method-has-species-support');\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n"],"sourceRoot":""}